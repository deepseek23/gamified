# Generated by Django 4.2.7 on 2025-09-10 18:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BotKnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content_type', models.CharField(choices=[('faq', 'FAQ'), ('quiz_help', 'Quiz Help'), ('task_guidance', 'Task Guidance'), ('eco_facts', 'Environmental Facts'), ('platform_help', 'Platform Help'), ('motivation', 'Motivational Content')], max_length=20)),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('keywords', models.JSONField(default=list, help_text='Keywords that trigger this response')),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['content_type', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ChatbotIntent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('training_phrases', models.JSONField(default=list, help_text='Example phrases for this intent')),
                ('response_templates', models.JSONField(default=list, help_text='Template responses for this intent')),
                ('requires_context', models.BooleanField(default=False)),
                ('can_trigger_action', models.BooleanField(default=False)),
                ('action_type', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('user', 'User Message'), ('bot', 'Bot Response'), ('system', 'System Message')], max_length=10)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('response_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('intent_detected', models.CharField(blank=True, max_length=100)),
                ('entities_extracted', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('helpful', 'Helpful'), ('not_helpful', 'Not Helpful'), ('incorrect', 'Incorrect Information'), ('unclear', 'Unclear Response')], max_length=20)),
                ('comment', models.TextField(blank=True)),
                ('rating', models.PositiveIntegerField(blank=True, help_text='1-5 rating', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='chatbot.chatmessage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chatbot_feedback', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('current_topic', models.CharField(blank=True, max_length=200)),
                ('user_intent', models.CharField(blank=True, max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chatbot.chatsession'),
        ),
        migrations.CreateModel(
            name='ChatbotAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('total_messages', models.PositiveIntegerField(default=0)),
                ('unique_users', models.PositiveIntegerField(default=0)),
                ('avg_response_time_ms', models.FloatField(default=0.0)),
                ('avg_session_length', models.FloatField(default=0.0)),
                ('positive_feedback_count', models.PositiveIntegerField(default=0)),
                ('negative_feedback_count', models.PositiveIntegerField(default=0)),
                ('avg_rating', models.FloatField(default=0.0)),
                ('top_intents', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('date',)},
            },
        ),
    ]
